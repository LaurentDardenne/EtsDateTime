# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  # push:
  #  branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 Build-EtsDateTime-for-powershell-v5-1:
    # The type of runner that the job will run on
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell
        # env:
        #   ## Environment variable for step n
        #   VAR_NAME: XXXXXXXXXXXX    
        # ## Reference your environment variables
        # run: echo "var :${{env.VAR_NAME}}"   
        # run: echo "The API key is:${{secrets.API_KEY}}"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set required PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v4.5
        with:
          modules-to-cache: PSScriptAnalyzer, InvokeBuild, platyPS

      - name: Invoke build - mode 'Debug' for 'Dev' environment
        run: |
          $MygetGalleryPublishUri = 'https://www.myget.org/F/ottomatt/api/v2/package'
          $MygetGallerySourceUri = 'https://www.myget.org/F/ottomatt/api/v2'

          Register-PSRepository -Name OttoMatt -SourceLocation $MygetGallerySourceUri -PublishLocation $MygetGalleryPublishUri -InstallationPolicy Trusted
          Install-Module -Name DTW.PS.FileSystem -Repository OttoMatt -Confirm:$false -Force
          .\Build.ps1
          echo "artifactPath= $GITHUB_WORKSPACE\Release" >> $GITHUB_ENV

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: artifact
          path: ${{ env.artifactPath }}         

