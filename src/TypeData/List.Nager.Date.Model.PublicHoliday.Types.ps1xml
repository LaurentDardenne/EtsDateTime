<?xml version="1.0" encoding="utf-8"?>
<Types>
  <Type>
    <Name>System.Collections.Generic.List`1[[Nager.Date.Model.PublicHoliday, Nager.Date, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null]]</Name>
    <Members>
      <ScriptMethod>
        <Name>SpecificPublicHoliday</Name>
        <Script> 
          # Department-specific holidays
          switch ($args.Count) {
           1 {        
                $SpecificCounty=$args[0]
                $this.FindAll( {param($Day) $Day.Counties -Contains $SpecificCounty} )
              }
              
           default { throw "No overload for 'PublicHolidayByCounty' takes the specified number of parameters." }
        }          
       </Script>
      </ScriptMethod>
      <ScriptMethod>
        <Name>SharedPublicHoliday</Name>
        <Script> 
          # Holidays that are common to all counties
         $this.FindAll( {param($Day) $null -eq $Day.Counties} )
       </Script>
      </ScriptMethod>
      <ScriptMethod>
        <Name>PublicHolidayByCounty</Name>
        <Script> 
          switch ($args.Count) {
           1 {
                $County=$args[0] # String like 'FR-MQ'
                 # All public holyday for a specific county
                $this.FindAll( {param($Day) (($Null -eq $Day.Counties) -or ($Day.Counties -Contains $County))} )
             }

           default { throw "No overload for 'PublicHolidayByCounty' takes the specified number of parameters." }
        }              
       </Script>
      </ScriptMethod> 
      <ScriptMethod>
        <Name>isHoliday</Name>
        <Script> 
         switch ($args.Count) {
           1 {
                #Shared list
               $searchDay=$args[0] #[datetime]
               ( $this.SharedPublicHoliday()|Where-object {$_.Date -eq $SearchDay.Date} ).Count -eq 1    
             }
            
           2 { 
                #Specific county list
               $searchDay=$args[0] #[datetime]
               $SpecificCounty=$args[1] # String like 'FR-MQ'
               $this.FindAll(
                 {
                  param($Day) 
                   ((($Day.Date -eq $SearchDay.Date) -and (($null -eq $Day.Counties) -or ($Day.Counties -Contains $SpecificCounty))))
                 }
                ).Count -eq 1

             }

           default { throw "No overload for 'isHoliday' takes the specified number of parameters." }
        }
       </Script>
      </ScriptMethod>        
    </Members>
  </Type>
</Types>